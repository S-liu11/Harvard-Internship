###########################################################################
#   Scale_Periodicity_PCSTRESTEP_squarescale_20141208.py
###########################################################################
#   PURPOSE:
#       ADD NOMINAL STRAIN TO SQUARESCALE MODELS
###########################################################################

#CREATE STEP: GENERAL STATIC-STRECHING
mdb.models['Model-1'].StaticStep(maxNumInc=1000, initialInc=0.001, minInc=1e-10,maxInc=0.1, 
    name= 'Scale-Stretching', nlgeom=ON, previous='Initial')
#mdb.models['Model-1'].FieldOutputRequest(name='sticking', 
#    createStepName='Scale-Stretching', variables=('S', 'E', 'U', 'RF'))

#SET PARAMETERS FOR VALUE OF STRAINS AND NAMING. MOST TIME IT IS UNNECESSARY
NSTRAIN=0
NS=int(100*NSTRAIN)
NSTRAIN1=NSTRAIN
NSTRAIN2=0.2

# Externally Applied Strain Through the Virtual Points (X-DIR) =================
# (engineering strain) =========================================================
# Externally Applied Strain Through the Virtual Points (Y-DIR) =================
# (engineering strain) =========================================================
#   # for the real structure
#CREATE PINNED BOUNDARY CONDITION
#mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Initial'
#    , distributionType=UNIFORM, fieldName='', fixed=OFF
#    , localCsys=None, name='BC-CornerPinned-real', region=
#    mdb.models['Model-1'].rootAssembly.instances['Part-RVE-1'].sets['Set-CornerBL']
#    , u1=0.0, u2=0.0, u3=0.0, ur1=UNSET, ur2=UNSET, ur3=UNSET)

#   #   # H11, H21
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, 
    createStepName='Scale-Stretching', distributionType=UNIFORM, fieldName=''
    , fixed=OFF, localCsys=None, name='BC-VNReal-H1', region=
    mdb.models['Model-1'].rootAssembly.instances['Part-RealH1'].sets['Set-Point']
    , u1=UNSET, u2=UNSET, ur3=UNSET)
#   #   # H12, H22
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, 
    createStepName='Scale-Stretching', distributionType=UNIFORM, fieldName=''
    , fixed=OFF, localCsys=None, name='BC-VNReal-H2', region=
    mdb.models['Model-1'].rootAssembly.instances['Part-RealH2'].sets['Set-Point']
    , u1=UNSET, u2=0.25, ur3=UNSET)
	
#CREATE SHEARING STEP
#SOMETIMES THIS IS NECESSARY WHEN WE WANT TO KNOW THIS MODEL'S CAPABILITY UNDER DIFFERENT LOADING CONDITIONS
#OF COURSE MODEL CAN ALSO BE SHEARED FIRST, JUST CHANGE THE VIRTUAL POINT WE NEED TO USE
#mdb.models['Model-1'].StaticStep(name='Scale-shearing', previous='Scale-Stretching', maxNumInc=1000, initialInc=0.001, 
#    minInc=1e-10, maxInc=0.1)
#mdb.models['Model-1'].boundaryConditions['BC-VNReal-H2'].setValuesInStep(
#    stepName='Scale-shearing', u2=0.2)

#CREATE STATIC JOB
Jobname = 'scale_stretching_U3PBC_squarescale_' + str(lencraratio)+'_'+ str(perc)+'_'+str(3) 
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
#    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    memory=16, memoryUnits=GIGA_BYTES, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name=Jobname, nodalOutputPrecision=SINGLE, 
    numCpus=4, numDomains=4, queue=None, scratch='', type=ANALYSIS, 
    userSubroutine='', waitHours=0, waitMinutes=0)
mdb.saveAs(pathName=Jobname)

#=========================================================================
# 2. SUBMIT THE JOB WITH THE MODIFIED INPUT FILE
#=========================================================================   
mdb.jobs[Jobname].submit(consistencyChecking=OFF)
    # mdb.jobs[CurJobName].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs[Jobname].waitForCompletion()
time.sleep(2)
#DELETE THE STEPS. IF A NEW LOADING CONDITION NEED TO BE RESEARCHED, JUST CHANGE THE STRAIN PARAMETERS AND RUN THIS SUBROUTINE
del mdb.models['Model-1'].steps['Scale-Stretching']
#del mdb.models['Model-1'].steps['Scale-shearing']
