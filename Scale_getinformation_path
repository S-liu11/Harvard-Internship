##########################################################################
#CODES TO OBTAIN DEFORMATION PATTERN OF THE SCALE UNDER DIFFERENT LOADING
#PATHS AND SAVE THE DATA TO CSV FILES FOR POSTPROCESSING                 
##########################################################################
#INITIATION 
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
from abaqus import *
from abaqusConstants import *
from odbAccess import *
from viewerModules import *

text_file = open('scale_squarescale_tntn_5.csv','w') #OPEN CSV FILE FOR I/O OPERATIONS
text_file.write('%2.10f, %s, %s, %s, %s, %s' % (0.,'tensile_strain','shear strain','x','y','z')) #FORMAT

#LOAD THIS SCRIPT. SOME DEFINED FUNCTIONS IN THIS SCRIPT MAY BE USED
execfile('Scale_Periodicity_SCSCD_MODULE_20141011.py')

text_file.write('\n')
ODB = openOdb(path = 'scale_stretching_U3PBC_squarescale_tnsh_2_90_51_PATH5.odb')#READ ODB FILE
#GET DEFORMATION DATA FROM THREE POINTS ON THE SCALE TO DETERMINE THE SCALE DIRECTION
tipset=ODB.rootAssembly.instances['PART-RVE-1'].nodeSets['TIP']
sidetipset1=ODB.rootAssembly.instances['PART-RVE-1'].nodeSets['SIDETIP1']
sidetipset2=ODB.rootAssembly.instances['PART-RVE-1'].nodeSets['SIDETIP2']
#GET SETS OF THE VIRTUAL NODES TO GET STRAINS OF EACH FRAME
H1=ODB.rootAssembly.instances['PART-REALH1'].nodeSets['SET-POINT']
H2=ODB.rootAssembly.instances['PART-REALH2'].nodeSets['SET-POINT']
#ORIGINAL COORDINATES
original0=tipset.nodes[0].coordinates
original1=sidetipset1.nodes[0].coordinates
original2=sidetipset2.nodes[0].coordinates
#GET COORDINATES OF THREE NODES IN EACH FRAME
step=ODB.steps
for stepnum in range(len(step)):
	stepname='path_'+str(stepnum+1)
	for frame in step[stepname].frames:
		time=frame.frameValue
		#GET DISPLACEMENT
		disp0=frame.fieldOutputs['U'].getSubset(region=tipset).values[-1].data[:]
		disp1=frame.fieldOutputs['U'].getSubset(region=sidetipset1).values[-1].data[:]
		disp2=frame.fieldOutputs['U'].getSubset(region=sidetipset2).values[-1].data[:]
		#GET TENSILE&SHEAR STRAIN
		h11=frame.fieldOutputs['U'].getSubset(region=H1).values[-1].data[0]
		h21=frame.fieldOutputs['U'].getSubset(region=H2).values[-1].data[0]
		#CALCULATE DEFORMED COORDINATES
		coord0_1=original0+disp0
		coord1_1=original1+disp1
		coord2_1=original2+disp2
		#CALCULATE NORMAL VECTOR OF THE SCALE.
		#THIS STEP IMPLICATES THAT THE SCALE IS TREATED AS A RIGID BODY. THIS MAKES SENSE, BECAUSE THE DEFORMATION
		#OF THE SCALE IS INSIGNIFICANT
		vec=MATCROSS(coord0_1-coord1_1, coord0_1-coord2_1)
		norm=vec/VECNORM(vec)
		#WRITE THE NORMAL VECTOR INTO THE CSV FILE
		text_file.write('%2.10f,%2.10f,%2.10f,%2.10f,%2.10f,%2.10f,' % (time,h11,h21,norm[0],norm[1],norm[2]))
		text_file.write('\n')
		#LET ME KNOW IF YOU GET THE DATA IN EACH STEP
		print 'data_'+str(stepname)+'_'+str(time)+'_get!'
		
#CLOSE THE ODB AND CSV FILES
ODB.close()
text_file.close()
